<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GaryLz</title>
  
  <subtitle>Footprints - &quot;keep curiosity as a child&quot;</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-15T17:25:58.756Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Gary.Leung</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020</title>
    <link href="http://yoursite.com/2020/03/14/2020/"/>
    <id>http://yoursite.com/2020/03/14/2020/</id>
    <published>2020-03-14T06:58:46.000Z</published>
    <updated>2020-03-15T17:25:58.756Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020送给自己的第一句话"><a href="#2020送给自己的第一句话" class="headerlink" title="2020送给自己的第一句话"></a>2020送给自己的第一句话</h2><blockquote><p>2020， 注定是未来十年中绝不平常的一年</p></blockquote><p>从2019， 再到2020，一年过去了。</p><a id="more"></a><p>个人也非常感慨——</p><p>自己，从一个啥事都非常好奇，凭着一腔热情瞎折腾，再到现在，凡事思前想后，生怕走错路的自己。</p><p>那年的热情不在，只留下苍白无力的现实。</p><p>2020年，开局不利。Cornorvirus outbreak, market crash, Kobe Bryant passed away, so on…</p><p>Maybe I could be one of the jobless.(the US is in the best of the history, or China is stuck in economy slowdown.)</p><p><strong><u>So sad but that is life.</u></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2020送给自己的第一句话&quot;&gt;&lt;a href=&quot;#2020送给自己的第一句话&quot; class=&quot;headerlink&quot; title=&quot;2020送给自己的第一句话&quot;&gt;&lt;/a&gt;2020送给自己的第一句话&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;2020， 注定是未来十年中绝不平常的一年&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从2019， 再到2020，一年过去了。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>How Do I Love Thee</title>
    <link href="http://yoursite.com/2019/04/03/How-Do-I-Love-Thee/"/>
    <id>http://yoursite.com/2019/04/03/How-Do-I-Love-Thee/</id>
    <published>2019-04-03T13:45:25.000Z</published>
    <updated>2020-01-27T06:03:18.564Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-Do-I-Love-Thee"><a href="#How-Do-I-Love-Thee" class="headerlink" title="How Do I Love Thee"></a>How Do I Love Thee</h2><blockquote><p><em>written by Elizabeth Barrett Browning</em></p></blockquote><p>How do I love thee?</p><p>Let me count the ways.</p><a id="more"></a><p>I love Thee to the depth and breath and height my Soul can reach,<br>when feeling out of Sight, for the ends of Being and ideal Grace.</p><p>I love thee to the level of everyday’s Most quiet need, by sun and candlelight.</p><p>I love thee freely, as men strive for Right;</p><p>I love thee purely, as they turn from Praise.</p><p>I love thee with the Passion put to use in my old griefs, and with my childhood’s faith.</p><p>I love thee with a love I seemed to lose with my lost saints,</p><p>I love thee with the breath, smiles, tears, of all my life </p><p>and, if God choose, I shall but love thee better after death.</p><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;How-Do-I-Love-Thee&quot;&gt;&lt;a href=&quot;#How-Do-I-Love-Thee&quot; class=&quot;headerlink&quot; title=&quot;How Do I Love Thee&quot;&gt;&lt;/a&gt;How Do I Love Thee&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;written by Elizabeth Barrett Browning&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;How do I love thee?&lt;/p&gt;
&lt;p&gt;Let me count the ways.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Charlie&#39;s Last Letter</title>
    <link href="http://yoursite.com/2019/03/23/Charlie-s-Last-Letter/"/>
    <id>http://yoursite.com/2019/03/23/Charlie-s-Last-Letter/</id>
    <published>2019-03-23T02:44:35.000Z</published>
    <updated>2020-01-27T06:03:18.563Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Charlie’s-Last-Letter"><a href="#Charlie’s-Last-Letter" class="headerlink" title="Charlie’s Last Letter"></a>Charlie’s Last Letter</h2><blockquote><p>from MOVIE <em>The Perks Of Being A Wallflower</em></p></blockquote><p>I don’t know if I will have the time to write any more letters.</p><p>Because I might be too busy trying to paticipate.</p><a id="more"></a><p>So, it this does end up being the last letter.</p><p>I just want to tell you that </p><p>I was in a bad place before I started high school</p><p>And you helped me.</p><p>Even if you didn’t know what I was talking about </p><p>or know someone who’s gone through it</p><p>And it made me not feel alone.</p><p>Because I know there’re people </p><p>who say all these things don’t happen</p><p>there’re people </p><p><em>who forget what it’s like to be 16<br>when they turn 17.</em></p><p>I know these will be all stories someday,</p><p>And our picutures will become old photograph,s</p><p>And we all will become someone’s mom or dad.</p><p>But right now,</p><p>these moments are not stories.</p><p>This is happening.</p><p>I’m here, </p><p>and I’m looking at her.</p><p>And she’s so beautiful.</p><p>…</p><p>I can see it,</p><p>the one moment when you know you are not a sad stories,</p><p>You’re alive.</p><p>And you stand up and look at the lights on the building</p><p>and everything that makes you wonder.</p><p>And you were listening to that song on that drive with people you love most in this world.</p><p>And in this moment,</p><p>I swear,</p><p>We are infinite.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Charlie’s-Last-Letter&quot;&gt;&lt;a href=&quot;#Charlie’s-Last-Letter&quot; class=&quot;headerlink&quot; title=&quot;Charlie’s Last Letter&quot;&gt;&lt;/a&gt;Charlie’s Last Letter&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;from MOVIE &lt;em&gt;The Perks Of Being A Wallflower&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don’t know if I will have the time to write any more letters.&lt;/p&gt;
&lt;p&gt;Because I might be too busy trying to paticipate.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Poems" scheme="http://yoursite.com/tags/Poems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms of dynamic Sequential List</title>
    <link href="http://yoursite.com/2019/03/19/Algorithms-of-dynamic-Sequential-List/"/>
    <id>http://yoursite.com/2019/03/19/Algorithms-of-dynamic-Sequential-List/</id>
    <published>2019-03-19T02:35:26.000Z</published>
    <updated>2020-01-27T06:03:18.563Z</updated>
    
    <content type="html"><![CDATA[<h2 id="线性表顺序结构-动态"><a href="#线性表顺序结构-动态" class="headerlink" title="线性表顺序结构-动态"></a>线性表顺序结构-动态</h2><h3 id="to-declare"><a href="#to-declare" class="headerlink" title="to declare"></a>to declare</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_INIT_SIZE 10;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_INCREMENT 5;</span></span><br><span class="line"><span class="comment">//array can't apply for a new capacity</span></span><br><span class="line"><span class="comment">//once it was defined.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    DataList *data;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">    <span class="keyword">int</span> datasize <span class="comment">//to note the current capacity that has been occupied.</span></span><br><span class="line">                <span class="comment">// to judge if apply for a new capacity if it's full.   </span></span><br><span class="line">&#125; SeqList</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="1-to-initialize"><a href="#1-to-initialize" class="headerlink" title="1. to initialize"></a>1. to initialize</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initList</span><span class="params">(SeqList &amp;L)</span></span>&#123;</span><br><span class="line"><span class="comment">//initialize memory allocation</span></span><br><span class="line">    L.data = (DataList*)molloc(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(DataList));</span><br><span class="line">    <span class="keyword">if</span>(!L.data)</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    L.length = <span class="number">0</span>;</span><br><span class="line">    L.datasize = LIST_INIT_SIZE;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//succeeded   </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-to-destroy-all-of-member-variables-and-recycle"><a href="#2-to-destroy-all-of-member-variables-and-recycle" class="headerlink" title="2. to destroy all of member variables and recycle"></a>2. to destroy all of member variables and recycle</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">destroyList</span><span class="params">(SeqList &amp;L)</span></span>&#123;</span><br><span class="line">    <span class="built_in">free</span>(L.data);</span><br><span class="line">    L.length = <span class="number">0</span>;</span><br><span class="line">    L.datasize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-to-recycle"><a href="#3-to-recycle" class="headerlink" title="3. to recycle"></a>3. to recycle</h4><p>the process is <em>the same</em> as the above</p><h4 id="4-to-check-if-it’s-empty"><a href="#4-to-check-if-it’s-empty" class="headerlink" title="4. to check if it’s empty"></a>4. to check if it’s empty</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">checkEmpty</span><span class="params">(SeqList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !(L.length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-to-get-the-length-of-the-list"><a href="#5-to-get-the-length-of-the-list" class="headerlink" title="5. to get the length of the list"></a>5. to get the length of the list</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">(SeqList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> L.length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-to-return-the-value-of-the-n-th-element"><a href="#6-to-return-the-value-of-the-n-th-element" class="headerlink" title="6. to return the value of the n-th element"></a>6. to return the value of the n-th element</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataList <span class="title">getElem</span><span class="params">(SeqList L, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( n &lt; <span class="number">1</span> || n &gt; L.length )</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">//you also can only consider the feasible situation</span></span><br><span class="line">    <span class="keyword">return</span> (*(L.data+i<span class="number">-1</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-to-return-the-index-AKA-situation-of-the-given-number"><a href="#7-to-return-the-index-AKA-situation-of-the-given-number" class="headerlink" title="7. to return the index(AKA situation) of the given number"></a>7. to return the index(AKA situation) of the given number</h4><p>if it’s in the list, if succeed return 1, or return 0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLocation</span><span class="params">(SeqList L, <span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( data &amp;&amp; L.length != <span class="number">0</span> )&#123; <span class="comment">//to ensure that pointer(data) or the list is not NULL</span></span><br><span class="line">        <span class="keyword">int</span> j;<span class="comment">//default j=0;</span></span><br><span class="line">        <span class="comment">// to check if that given number is in the list</span></span><br><span class="line">        <span class="keyword">while</span> ( j &lt; L.length &amp;&amp; num != (*(data+j) )</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> ( j != L.length)</span><br><span class="line">            <span class="keyword">return</span> j;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-to-get-the-value-of-its-immediate-successor"><a href="#8-to-get-the-value-of-its-immediate-successor" class="headerlink" title="8. to get the value of its immediate successor"></a>8. to get the value of its immediate successor</h4><p>if it exits by giving values</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataList <span class="title">getI_suc</span><span class="params">(SeqList L, DataList values )</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( data &amp;&amp; L.length != <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">while</span> ( j &lt; L.length<span class="number">-1</span> &amp;&amp; values != (*(L.data+j)))</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> ( j ! = L.length<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> (*(L.data+j+<span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-to-get…the-value-of-its-predecessor"><a href="#9-to-get…the-value-of-its-predecessor" class="headerlink" title="9. to get…the value of its predecessor"></a>9. to get…the value of its predecessor</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataList <span class="title">getI_prede</span><span class="params">(SeqList L, DataList value)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( L.data &amp;&amp; L.length != <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> ( j &lt; L.length &amp;&amp; values != (*(L.data+j)))</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> ( j != L.length )</span><br><span class="line">            <span class="keyword">return</span> (*(L.data+j<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-ATTENTION"><a href="#10-ATTENTION" class="headerlink" title="10. ATTENTION"></a>10. <em>ATTENTION</em></h4><p><strong>insert a given value before an expected element of the list</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insertBef</span><span class="params">(SeqList &amp;L, DataList value, <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="comment">//need to note here, applying for a new room for the value if feasible**</span></span><br><span class="line">    <span class="keyword">if</span> ( !L.data || L.length = <span class="number">0</span> || i &lt; <span class="number">1</span> || i &gt; L.length )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;      </span><br><span class="line">        DataList  *newbase, *q, *p; <span class="comment">//p,q that two being used into operation of putting backward other elements  </span></span><br><span class="line">        <span class="comment">//need to note here - function remolloc() just change its memory size(AKA resize the memory block), doesn't change its values that inside the original memory. </span></span><br><span class="line">        <span class="comment">//check if the block of memory is full now</span></span><br><span class="line">        <span class="keyword">if</span> ( L.length == L.datasize )&#123; <span class="comment">//L.length --&gt; means the size of memory using now</span></span><br><span class="line">        newbase = (DataList*)remolloc(L.data, (L.datasize + LIST_INCREMENT)*(<span class="keyword">sizeof</span>(DataList)));</span><br><span class="line">        <span class="comment">//apply for room for value to be saved</span></span><br><span class="line">        <span class="comment">//what if failing to allocate the requested memory block, a null pointer is returned</span></span><br><span class="line">        <span class="comment">//appendix - dereference means “取指针所指向的对象的值” in Chinese. (AKA star sign(*))</span></span><br><span class="line">        <span class="keyword">if</span> ( !newbase )</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);  <span class="comment">//terminate in advance ##reallyUsefulTrick##</span></span><br><span class="line">        <span class="comment">//on success</span></span><br><span class="line">        L.datasize += LIST_INCREMENT;</span><br><span class="line">        L.data = newbase;  <span class="comment">//new address</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//expected element and those behind need to move backwards,</span></span><br><span class="line">        <span class="comment">//the process starts with the last one.</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//<span class="doctag">NOTE:</span> why need two pointers like p, q.</span></span><br><span class="line">        <span class="comment">// because all elements need being pointed by pointers.</span></span><br><span class="line">        <span class="comment">//so, we need two to deal with the process of offering a room for that value waiting to insert</span></span><br><span class="line">        <span class="comment">// and one of both to point that empty room</span></span><br><span class="line">        q = L.data+i<span class="number">-1</span>; <span class="comment">//let the pointer q point to that room(by passing on the address)</span></span><br><span class="line">        <span class="keyword">for</span> ( p = L.data+L.length<span class="number">-1</span>; p &gt; i; --p )&#123;</span><br><span class="line">            *(p+<span class="number">1</span>) = *p; <span class="comment">//moving back a room   </span></span><br><span class="line">        &#125;<span class="comment">//on success, it can't be oversized.</span></span><br><span class="line">        *q = value;</span><br><span class="line">        <span class="comment">//don't forget add up its length.</span></span><br><span class="line">        ++L.length;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-to-delete-an-expected-element-of-the-list"><a href="#11-to-delete-an-expected-element-of-the-list" class="headerlink" title="11. to delete an expected element of the list,"></a>11. to delete an expected element of the list,</h4><pre><code>if done return 1; or return 0.</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete_elem</span><span class="params">(SeqList &amp;L; <span class="keyword">int</span> s_num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!L.data || L.length == <span class="number">0</span> || s_num &lt; <span class="number">1</span>; s_num &gt; L.length)</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    DataList *p;</span><br><span class="line">    <span class="keyword">if</span> ( p = L.data+s_num; p &lt; L.data+L.length<span class="number">-1</span>; ++p)&#123;</span><br><span class="line">        *(p<span class="number">-1</span>) = *p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//on suceess</span></span><br><span class="line">    --L.length;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Reflection-A-BIG-highlight"><a href="#Reflection-A-BIG-highlight" class="headerlink" title="Reflection: A BIG-highlight"></a>Reflection: A BIG-highlight</h3><h4 id="the-difference-between-i-and-i"><a href="#the-difference-between-i-and-i" class="headerlink" title="the difference between ++i and i++;"></a>the difference between ++i and i++;</h4><blockquote><p>it’s mainly about the order of operations<br>for a ‘for’ loop, either works<br>but prefix(pre increment)seems more common<br>because you won’t go wrong using it.<br>but<br>like post increment(AKA suffix/postfix)<br>it’s more like, it returns the original value that it held before being incremented.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;线性表顺序结构-动态&quot;&gt;&lt;a href=&quot;#线性表顺序结构-动态&quot; class=&quot;headerlink&quot; title=&quot;线性表顺序结构-动态&quot;&gt;&lt;/a&gt;线性表顺序结构-动态&lt;/h2&gt;&lt;h3 id=&quot;to-declare&quot;&gt;&lt;a href=&quot;#to-declare&quot; class=&quot;headerlink&quot; title=&quot;to declare&quot;&gt;&lt;/a&gt;to declare&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LIST_INIT_SIZE 10;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LIST_INCREMENT 5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//array can&#39;t apply for a new capacity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//once it was defined.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataList *data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; datasize &lt;span class=&quot;comment&quot;&gt;//to note the current capacity that has been occupied.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// to judge if apply for a new capacity if it&#39;s full.   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; SeqList&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>EnglishReviews</title>
    <link href="http://yoursite.com/2019/03/17/English-Reviews/"/>
    <id>http://yoursite.com/2019/03/17/English-Reviews/</id>
    <published>2019-03-17T14:37:01.000Z</published>
    <updated>2020-01-27T06:03:18.563Z</updated>
    
    <content type="html"><![CDATA[<h3 id="English-catalogue"><a href="#English-catalogue" class="headerlink" title="English catalogue"></a>English catalogue</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;English-catalogue&quot;&gt;&lt;a href=&quot;#English-catalogue&quot; class=&quot;headerlink&quot; title=&quot;English catalogue&quot;&gt;&lt;/a&gt;English catalogue&lt;/h3&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>婴儿的初啼</title>
    <link href="http://yoursite.com/2019/03/17/%E5%A9%B4%E5%84%BF%E7%9A%84%E5%88%9D%E5%95%BC/"/>
    <id>http://yoursite.com/2019/03/17/%E5%A9%B4%E5%84%BF%E7%9A%84%E5%88%9D%E5%95%BC/</id>
    <published>2019-03-17T13:00:25.000Z</published>
    <updated>2020-01-27T06:03:18.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world!!"></a>Hello world!!</h1><p>I’m here writing the first post on my blog site.<br>…</p><p>好激动呀…OMG…                </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hello-world&quot;&gt;&lt;a href=&quot;#Hello-world&quot; class=&quot;headerlink&quot; title=&quot;Hello world!!&quot;&gt;&lt;/a&gt;Hello world!!&lt;/h1&gt;&lt;p&gt;I’m here writing the first pos
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
