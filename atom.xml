<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GaryLz</title>
  
  <subtitle>Footprints - &quot;keep curiosity as a child&quot;</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-16T12:01:49.674Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Gary.Leung</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Node.js-setup-on-Mac</title>
    <link href="http://yoursite.com/2020/03/16/Node.js-setup-on-Mac/"/>
    <id>http://yoursite.com/2020/03/16/Node.js-setup-on-Mac/</id>
    <published>2020-03-16T06:57:06.000Z</published>
    <updated>2020-03-16T12:01:49.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js-Setup-on-Mac"><a href="#Node-js-Setup-on-Mac" class="headerlink" title="Node.js Setup on Mac"></a>Node.js Setup on Mac</h1><blockquote><p>昨天晚上，受够去年装乱七八糟的Node.js, 打算重装了Node.js。虽然这过程里也有点波折。</p><p>记录以警示后来人少走弯路。</p></blockquote><p>整个流程是这样子滴。</p><p>nvm(Homebrew) -&gt; node(npm) -&gt; hero-cli</p><a id="more"></a><p>大致分为三步走。如果你用Mac没装Homebrew,那请上 <u><a href="https://brew.sh/" target="_blank" rel="noopener">homebrew官网安装</a></u></p><blockquote><p>Friendly-note: </p><p>由于这片土地的特殊性，以及防止遇到一些奇奇乖乖的出错，最好自备科学上网环境，以及终端走代理技能。</p></blockquote><p>两个坑：1）brew装nvm，重启终端后nvm失效 2）终端重启后，通过nvm安装的node、npm失效</p><h3 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h3><p>装完<code>homebrew</code>，如果你成功的话。</p><p>安装nvm，十分简单。只需要一句话。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm <span class="comment">#这里会自动执行brew update命令，然后执行该命令。</span></span><br></pre></td></tr></table></figure><p>由于外网，update整个过程需要等很久。大概要3-4分钟，甚至更久。所以，耐心等待，切不要重蹈我以前的覆辙，莽断地按下Ctrl+C结束。这会导致很严重的后果—可能再也运行不了brew命令。所以，最好走代理。</p><p>安装成功后，会有一个bug, </p><h4 id="坑1-brew装nvm，重启终端后nvm失效"><a href="#坑1-brew装nvm，重启终端后nvm失效" class="headerlink" title="坑1: brew装nvm，重启终端后nvm失效"></a><strong>坑1: brew装nvm，重启终端后nvm失效</strong></h4><p>brew安装nvm有个bug，安装时缺少了nvm.sh，这会导致每次重启终端，nvm命令就失效了，所以我们要每次运行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 复制下面的代码到终端并运行</span><br><span class="line"><span class="built_in">export</span> NVM_DIR=~/.nvm</span><br><span class="line"><span class="built_in">source</span> $(brew --prefix nvm)/nvm.sh</span><br></pre></td></tr></table></figure><p>好了，现在nvm命令已经能被识别了，但是每次重启终端都要运行无疑是很复杂的，所以要在<code>.bash_profile</code>（<code>～/.zshrc</code>）中配置一下，保证每次重启时，系统都能帮我们做一步。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#edit on .bash_profile</span></span><br><span class="line"><span class="comment">#setup NVM_DIR</span></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"~/.nvm"</span></span><br><span class="line"><span class="built_in">source</span> $(brew --prefix nvm)/nvm.sh</span><br></pre></td></tr></table></figure><p>测试是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm -v <span class="comment">#显示版本号</span></span><br></pre></td></tr></table></figure><h3 id="安装node以及配置"><a href="#安装node以及配置" class="headerlink" title="安装node以及配置"></a>安装node以及配置</h3><p>这部分，应该算是最曲折的。</p><h4 id="使用nvm安装node"><a href="#使用nvm安装node" class="headerlink" title="使用nvm安装node"></a>使用nvm安装node</h4><p>安装node,命令依次是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote <span class="comment"># 查看当前提供node版本号</span></span><br><span class="line">nvm install v8.11.3 <span class="comment"># 自由选择 我选择了stable版本</span></span><br><span class="line"><span class="comment"># 安装完成后就可以查看node和npm的版本了</span></span><br><span class="line">node -v  </span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><blockquote><p>npm直接跟着node一起去安装进去，虽然两者没什么依赖关系。</p></blockquote><p>安装过程较慢，特别是安装node,得有耐心等待⌛️</p><h4 id="坑2：终端重启后，通过nvm安装的node、npm失效"><a href="#坑2：终端重启后，通过nvm安装的node、npm失效" class="headerlink" title="坑2：终端重启后，通过nvm安装的node、npm失效"></a><strong>坑2：终端重启后，通过nvm安装的node、npm失效</strong></h4><p>重启终端之后，node和npm也失效了. <strong>不要急着关掉终端！！！</strong></p><p>这是因为nvm没有默认绑定node的版本号，所以要手动绑定一下。</p><p>如果你还没有重启，node和npm命令还有效，那么直接运行下面的命令，如果已经无效，先重新用nvm安装node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nvm use v8.11.3 <span class="comment">#设置默认版本号</span></span><br><span class="line"><span class="comment">#绑定默认版本号,稳定版本号</span></span><br><span class="line">nvm <span class="built_in">alias</span> default v8.11.3 </span><br><span class="line">nvm <span class="built_in">alias</span> stable v8.11.3 <span class="comment">#如果下载的不是stable版的话，需要此条命令</span></span><br><span class="line">nvm ls</span><br></pre></td></tr></table></figure><p>然后check一下，看到如下截图</p><p><img src="../pics/node-setup-success.png" alt="success"></p><h6 id="例外情况"><a href="#例外情况" class="headerlink" title="例外情况"></a>例外情况</h6><p>Note: 而我的情况，并没有遵循上面所说那样，下载个node稳定版v8.11.3,相反下载了lts/carbon项目最新版，之后就出现没有全绑定问题，即stable版本并没有使用默认版，相反使用node原先预设的v11.3.0。</p><p><img src="../pics/node-setup-unsuccess.png" alt="unsuccesss"></p><p>应该使用 <code>nvm alias stable v8.17.0</code>命令解决</p><p>这样子, node的配置已经完成。</p><h3 id="安装hexo-cli"><a href="#安装hexo-cli" class="headerlink" title="安装hexo-cli"></a>安装hexo-cli</h3><p>一条命令，搞掂。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli <span class="comment">#全局安装</span></span><br></pre></td></tr></table></figure><p>不过下载有点慢，建议代理！</p><p>安装完后，check下是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v <span class="comment">#版本信息</span></span><br></pre></td></tr></table></figure><blockquote><p>有些人，可能会出现”command not found”的问题。如果安装完成的话，可能就是下到node另一个版本的node-modules文件夹去了。npm下载插件，默认存到当前系统node稳定版上去。所以说，如果出现该问题，最好检查下。(其中，/bin/hexo-二进制可执行文件，即命令。没有它，就会出现”命令不存在”的报错。)</p><p>解决：放回文件的正确位置。尝试把 node-modules/hexo-cli 和 ../bin/hexo 两个全部移入当前使用的node版本去。</p><p>（特别对于那些.nvm/version/文件夹下存在多个node版本的人来说，或者上面node绑定时，没有出现上面三个全绿的截图。) </p></blockquote><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><p><a href="https://segmentfault.com/a/1190000015416829" target="_blank" rel="noopener">segmentfault-一篇文章了解Mac上Node环境配置</a></p></li><li><p><a href="https://mupceet.com/2019/08/build-blog-based-on-hexo/" target="_blank" rel="noopener">Mupceet-Hexo 博客搭建与主题配置（零基础版）</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node-js-Setup-on-Mac&quot;&gt;&lt;a href=&quot;#Node-js-Setup-on-Mac&quot; class=&quot;headerlink&quot; title=&quot;Node.js Setup on Mac&quot;&gt;&lt;/a&gt;Node.js Setup on Mac&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;昨天晚上，受够去年装乱七八糟的Node.js, 打算重装了Node.js。虽然这过程里也有点波折。&lt;/p&gt;
&lt;p&gt;记录以警示后来人少走弯路。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;整个流程是这样子滴。&lt;/p&gt;
&lt;p&gt;nvm(Homebrew) -&amp;gt; node(npm) -&amp;gt; hero-cli&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Node.js, Mac" scheme="http://yoursite.com/tags/Node-js-Mac/"/>
    
  </entry>
  
  <entry>
    <title>hexo-backup</title>
    <link href="http://yoursite.com/2020/03/16/hexo-backup/"/>
    <id>http://yoursite.com/2020/03/16/hexo-backup/</id>
    <published>2020-03-16T04:41:44.000Z</published>
    <updated>2020-03-16T12:00:20.429Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-backup-amp-restore"><a href="#hexo-backup-amp-restore" class="headerlink" title="hexo backup &amp; restore"></a>hexo backup &amp; restore</h1><blockquote><p>项目初衷：我们想要解决在不同电脑上都能维护博客或配置、发布的内容丢失可恢复的问题。</p><p>这篇文章“鸽”了有很长一段时间, 昨天晚上刚好mac-pro重装node.js，顺便走了一遍-恢复hexo博客。</p></blockquote><p>blog-backup， 主要分为三部分: 备份到github上托管， 安装配置Node.js，恢复博客。</p><a id="more"></a><h3 id="备份到GitHub"><a href="#备份到GitHub" class="headerlink" title="备份到GitHub"></a>备份到GitHub</h3><p>首先，先分析hexo生成静态网页，部署到GitHub-repository的内容。</p><p><strong>我们不难发现</strong>：部署的文件内容，其实是<code>./public</code>文件夹下的所有内容。事实上，插件<code>hexo-deploy-git</code>通过COPY<code>hexo-gernerate</code>后的<code>public</code>文件内容到<code>.deploy_git</code>文件夹下，然后push到远程分支<code>origin/master</code>上完成网站的部署。</p><p>所以，我们的备份思路上，不妨上传blog文件夹下<strong>必要</strong>的文件即可。Plus, Git可以使用不同分支管理不同的内容，因此，我们就可以考虑使用GIt的分支来备份所有的文件。</p><p>但是，<strong>具体哪些是必要的呢</strong>？最简单粗暴的方法，当然是备份整个文件夹。但是，身为心理洁癖，有点强迫症患者来说，始终心里觉得怪怪的。</p><p>于是，得稍微分析hexo-blog不同文件夹的作用。</p><h4 id="分析hexo-blog文件夹"><a href="#分析hexo-blog文件夹" class="headerlink" title="分析hexo-blog文件夹"></a>分析hexo-blog文件夹</h4><p>先看hexo-blog文件夹下的文件结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── README.md</span><br><span class="line">├── _config.yml</span><br><span class="line">├── db.json</span><br><span class="line">├── hello-world.md</span><br><span class="line">├── node_modules</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json</span><br><span class="line">├── public</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">├── themes</span><br><span class="line">└── to-do.md</span><br><span class="line"></span><br><span class="line">5 directories, 7 files</span><br></pre></td></tr></table></figure><p>以下文件或者文件夹的作用：</p><ul><li><input checked="" disabled="" type="checkbox"> <p><code>_config.yml</code>文件： 站点配置文件，很多功能，插件配置都需要在此页面修改。</p></li><li><input disabled="" type="checkbox"> <p><code>node_modules</code>文件夹：hero-blog所依赖的模块</p></li><li><input checked="" disabled="" type="checkbox"> <p><code>package.json</code>文件：依赖的模块列表</p></li><li><input disabled="" type="checkbox"> <p><code>package-lock.json</code>文件：依赖的模块安装记录（由npm 根据<code>package.json</code>文件而生成)</p></li><li><input disabled="" type="checkbox"> <p><code>public</code>文件夹：hexo-generate 根据<code>public文件夹</code>里的.md文件而生存的静态文件</p></li><li><input checked="" disabled="" type="checkbox"> <p><code>scaffolds文件夹：</code>包含模版(post, page, tag等)，blog-customization可对其模版进行修改</p></li><li><input checked="" disabled="" type="checkbox"> <p><code>source</code>文件夹：包含所有源文件(.md)，<strong>这是最重要的内容之一</strong></p></li><li><input checked="" disabled="" type="checkbox"> <p><code>themes</code>文件夹：所有博客的主题文件夹(其中，<code>landscape</code>是<code>默认主题</code>)，其他的主题文件夹需要<code>git-clone</code></p><blockquote><p><del>⚠️：themes文件夹比较特殊，不是直接使用<code>git add</code>进行备份,因为通常themes都是由其他开发者进行开发维护，属于<code>git-submodule</code>。Git默认是直接跳过备份。因此我们需要通过<code>git submodule add</code>进行在hexo-backup分支上的<code>.gitmodules</code>的添加记录。</del></p><blockquote><p>那另外的 <code>.gitmodules</code> 作用又是什么呢？其实 <code>hexojs/hexo-starter</code> 是通过 Git 的 Submodule 功能来管理主题模块，本身仓库并不备份主题文件。</p><p>其实我们对于主题文件的备份有两个方案：一个方案是将其内容全部上传进行备份。一方面可以保证原主题的更新不会影响你原先配置的效果，另一方面，主题可能在进行配置的时候还需要下载一些额外的库，直接上传可以避免再次下载这些内容和配置。另一个方案是像 <code>hexo-starter</code> 仓库一样通过 <code>Git-submodule</code> 功能来管理，这样可以进行主题的更新。</p></blockquote></blockquote></li></ul><p>相较于 Hexo 初始化使用的仓库的备份列表，它的仓库是 <a href="https://github.com/hexojs/hexo-starter" target="_blank" rel="noopener">hexojs/hexo-starter</a>。</p><p>其备份列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scaffolds</span><br><span class="line"><span class="built_in">source</span></span><br><span class="line">themes</span><br><span class="line">.gitignore</span><br><span class="line">.gitmodules</span><br><span class="line">_config.yml</span><br><span class="line">package.json</span><br></pre></td></tr></table></figure><p>对比一下，它抛弃了：</p><ol><li><del><code>node_modules</code> &amp; <code>package-lock.json</code></del>：这两部分内容，只要保留 <code>package.json</code>，执行 <code>npm install</code> 就可以下载、生成。</li><li><del><code>public</code></del>：执行 <code>hexo g</code> 即可根据源文件生成网页内容。</li></ol><p>这些可重新生成的文件都可以不上传，因为它们只要使用特定的操作即可恢复。</p><p>因此，最终备份文件列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">scaffolds</span><br><span class="line"><span class="built_in">source</span></span><br><span class="line">themes</span><br><span class="line">themes_custom/next(存放对应主题修改的备份)</span><br><span class="line">.gitignore</span><br><span class="line">.gitmodules</span><br><span class="line">_config.yml</span><br><span class="line">package.json</span><br><span class="line"></span><br><span class="line"><span class="comment">#这样子我们同步之后，只需要对比一下把这些配置应用过去就可以快速完成对主题的配置。</span></span><br></pre></td></tr></table></figure><h4 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h4><ol><li>修改<code>.gitignore</code>文件，添加忽略名单</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">package-lock.json</span><br></pre></td></tr></table></figure><ol start="4"><li>执行一下命令，在本地仓库创建<code>hexo-backup</code>分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo-blog</span><br><span class="line">git init <span class="comment">#初始化空的Git仓库 hexo-blog/.git</span></span><br><span class="line"></span><br><span class="line">git checkut -b hexo-backup <span class="comment">#创建分支并跳转该分支</span></span><br><span class="line">git submodule add https://github.com/theme-next/hexo-theme-next.git themes/next </span><br><span class="line"><span class="comment">#添加位于 'themes/next' 的现存仓库到索引</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">git add . </span><br><span class="line">git commit -m <span class="string">"init blog backup"</span></span><br></pre></td></tr></table></figure><blockquote><p>Last but not least,</p><p>git branch -m master hexo-backup #重命名默认分支master</p></blockquote><ol start="5"><li>推送远程仓库</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:GaryLz/GaryLz.github.io.git</span><br><span class="line">git push <span class="comment">#自动创建同名的远程分支 hexo-backup(首次push的话，git push origin)</span></span><br></pre></td></tr></table></figure><blockquote><p>普及一点，在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在<code>git clone</code>的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的<code>master</code>分支自动”追踪”<code>origin/master</code>分支。</p><p>Git也允许手动建立追踪关系。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --<span class="keyword">set</span>-upstream master origin/next</span><br></pre></td></tr></table></figure></blockquote><p>上面命令指定<code>master</code>分支追踪<code>origin/next</code>分支。</p><p>选自 <u><a href="https://www.ruanyifeng.com/blog/2014/06/git_remote.html" target="_blank" rel="noopener">阮一峰-Git远程操作详解</a></u></p></blockquote><h5 id="选做"><a href="#选做" class="headerlink" title="选做"></a>选做</h5><ol start="2"><li><p>我们可以删除不使用的主题 <code>landscape</code> 或者把主题路径添加到忽略列表中。</p></li><li><p>创建 <code>themes_custom/next</code> 文件夹，将对主题进行的配件修改的文件拷贝一份到这里</p></li></ol><p>到Github上check一下，是否备份成功。如果有必要的话，最好将hexo-backup分支替换master分支，设置为Default-branch，方便往后的备份恢复。</p><blockquote><p> master分支就仅仅存着hexo-blog的静态网页，实在没什么必要设置为默认，而且并不会影响hexo d -g的使用。</p></blockquote><h3 id="安装配置Node-js"><a href="#安装配置Node-js" class="headerlink" title="安装配置Node.js"></a>安装配置Node.js</h3><blockquote><p>昨晚刚好重装Nodejs,期间过程还有前任的指引，不算太过于曲折。想起第一次弄Node.js+hexo，那其中被各种出错所支配的恐惧😱，真的是一言难尽。</p></blockquote><p>篇幅有点长，不如调转另一博客，<a href="./Node.js-setup-on-Mac.md">Node.js setup on Mac</a></p><h3 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h3><p>备份在手，装好Node.js。之后，恢复就难以相信的简单啦。</p><h5 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h5><p>在另一台电脑上，恢复就几个命令操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo-blog <span class="comment">#新建一个文件夹，恢复备份</span></span><br><span class="line"><span class="built_in">cd</span> hexo-blog</span><br><span class="line">git <span class="built_in">clone</span> git@github.com:GaryLz/GaryLz.github.io.git .</span><br><span class="line"><span class="comment">#克隆默认远程分支hexo-backup上的备份，如果hexo-backup分支不是默认分支，需要加flag `-b hexo-backup`</span></span><br><span class="line"></span><br><span class="line">npm install <span class="comment">#根据package.json，安装hexo-blog需要的依赖包，生成package-lock.json文件</span></span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br><span class="line"></span><br><span class="line"><span class="comment">#最后测试,正常更新博客</span></span><br><span class="line">hexo s -g</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>大家搭建好博客之后，千万别忘记备份哦:&lt;3</p><h4 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h4><p>讲诉个亲身遇到的奇怪问题。</p><p>成功恢复后，尝试hexo-blog更新一则post,看是否功能正常。</p><p>但是我遇到一个问题：使用hexo-deploy-git成功push到origin/master分支后，会出现清空过去master分支上的所有commits。</p><p>Why?</p><blockquote><p>其实在写博客时候，回顾deploy的原理。<strong>事实上，插件<code>hexo-deploy-git</code>通过COPY<code>hexo-gernerate</code>后的<code>public</code>文件内容到<code>.deploy_git</code>文件夹下，然后push到远程分支<code>origin/master</code>上完成网站的部署。</strong></p><p>但是我又在.gitignore文件，添加了 <code>deploy*/</code> 到忽略名单。</p><p>即deploy-git的追踪并没有备份下来。所以，别的电脑恢复后，执行 <code>hexo d</code> 之类的命令，会在本地初始化一个 <code>.git</code>文件夹，新建一个新的master分支，然后push到<code>origin/master</code>，导致之前原有的<code>origin/master</code>分支被清空（替代)。</p></blockquote><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><p><a href="https://mupceet.com/2019/09/backup-hexo-blog/" target="_blank" rel="noopener">Mupceet-Hexo 博客备份与恢复</a></p></li><li><p><a href="https://segmentfault.com/a/1190000015416829" target="_blank" rel="noopener">segmentfault-一篇文章了解Mac上Node环境配置</a></p></li><li><p><a href="https://mupceet.com/2019/08/build-blog-based-on-hexo/" target="_blank" rel="noopener">Mupceet-Hexo 博客搭建与主题配置（零基础版）</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hexo-backup-amp-restore&quot;&gt;&lt;a href=&quot;#hexo-backup-amp-restore&quot; class=&quot;headerlink&quot; title=&quot;hexo backup &amp;amp; restore&quot;&gt;&lt;/a&gt;hexo backup &amp;amp; restore&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;项目初衷：我们想要解决在不同电脑上都能维护博客或配置、发布的内容丢失可恢复的问题。&lt;/p&gt;
&lt;p&gt;这篇文章“鸽”了有很长一段时间, 昨天晚上刚好mac-pro重装node.js，顺便走了一遍-恢复hexo博客。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;blog-backup， 主要分为三部分: 备份到github上托管， 安装配置Node.js，恢复博客。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="hexo, backup" scheme="http://yoursite.com/tags/hexo-backup/"/>
    
  </entry>
  
  <entry>
    <title>2020</title>
    <link href="http://yoursite.com/2020/03/14/2020/"/>
    <id>http://yoursite.com/2020/03/14/2020/</id>
    <published>2020-03-14T06:58:46.000Z</published>
    <updated>2020-03-15T17:25:58.756Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020送给自己的第一句话"><a href="#2020送给自己的第一句话" class="headerlink" title="2020送给自己的第一句话"></a>2020送给自己的第一句话</h2><blockquote><p>2020， 注定是未来十年中绝不平常的一年</p></blockquote><p>从2019， 再到2020，一年过去了。</p><a id="more"></a><p>个人也非常感慨——</p><p>自己，从一个啥事都非常好奇，凭着一腔热情瞎折腾，再到现在，凡事思前想后，生怕走错路的自己。</p><p>那年的热情不在，只留下苍白无力的现实。</p><p>2020年，开局不利。Cornorvirus outbreak, market crash, Kobe Bryant passed away, so on…</p><p>Maybe I could be one of the jobless.(the US is in the best of the history, or China is stuck in economy slowdown.)</p><p><strong><u>So sad but that is life.</u></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2020送给自己的第一句话&quot;&gt;&lt;a href=&quot;#2020送给自己的第一句话&quot; class=&quot;headerlink&quot; title=&quot;2020送给自己的第一句话&quot;&gt;&lt;/a&gt;2020送给自己的第一句话&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;2020， 注定是未来十年中绝不平常的一年&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从2019， 再到2020，一年过去了。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>How Do I Love Thee</title>
    <link href="http://yoursite.com/2019/04/03/How-Do-I-Love-Thee/"/>
    <id>http://yoursite.com/2019/04/03/How-Do-I-Love-Thee/</id>
    <published>2019-04-03T13:45:25.000Z</published>
    <updated>2020-03-16T07:44:24.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-Do-I-Love-Thee"><a href="#How-Do-I-Love-Thee" class="headerlink" title="How Do I Love Thee"></a>How Do I Love Thee</h2><blockquote><p><em>written by Elizabeth Barrett Browning</em></p></blockquote><p>How do I love thee?</p><p>Let me count the ways.</p><a id="more"></a><p>I love Thee to the depth and breath and height my Soul can reach,<br>when feeling out of Sight, for the ends of Being and ideal Grace.</p><p>I love thee to the level of everyday’s Most quiet need, by sun and candlelight.</p><p>I love thee freely, as men strive for Right;</p><p>I love thee purely, as they turn from Praise.</p><p>I love thee with the Passion put to use in my old griefs, and with my childhood’s faith.</p><p>I love thee with a love I seemed to lose with my lost saints,</p><p>I love thee with the breath, smiles, tears, of all my life </p><p>and, if God choose, I shall but love thee better after death.</p><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;How-Do-I-Love-Thee&quot;&gt;&lt;a href=&quot;#How-Do-I-Love-Thee&quot; class=&quot;headerlink&quot; title=&quot;How Do I Love Thee&quot;&gt;&lt;/a&gt;How Do I Love Thee&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;written by Elizabeth Barrett Browning&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;How do I love thee?&lt;/p&gt;
&lt;p&gt;Let me count the ways.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Charlie&#39;s Last Letter</title>
    <link href="http://yoursite.com/2019/03/23/Charlie-s-Last-Letter/"/>
    <id>http://yoursite.com/2019/03/23/Charlie-s-Last-Letter/</id>
    <published>2019-03-23T02:44:35.000Z</published>
    <updated>2020-01-27T06:03:18.563Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Charlie’s-Last-Letter"><a href="#Charlie’s-Last-Letter" class="headerlink" title="Charlie’s Last Letter"></a>Charlie’s Last Letter</h2><blockquote><p>from MOVIE <em>The Perks Of Being A Wallflower</em></p></blockquote><p>I don’t know if I will have the time to write any more letters.</p><p>Because I might be too busy trying to paticipate.</p><a id="more"></a><p>So, it this does end up being the last letter.</p><p>I just want to tell you that </p><p>I was in a bad place before I started high school</p><p>And you helped me.</p><p>Even if you didn’t know what I was talking about </p><p>or know someone who’s gone through it</p><p>And it made me not feel alone.</p><p>Because I know there’re people </p><p>who say all these things don’t happen</p><p>there’re people </p><p><em>who forget what it’s like to be 16<br>when they turn 17.</em></p><p>I know these will be all stories someday,</p><p>And our picutures will become old photograph,s</p><p>And we all will become someone’s mom or dad.</p><p>But right now,</p><p>these moments are not stories.</p><p>This is happening.</p><p>I’m here, </p><p>and I’m looking at her.</p><p>And she’s so beautiful.</p><p>…</p><p>I can see it,</p><p>the one moment when you know you are not a sad stories,</p><p>You’re alive.</p><p>And you stand up and look at the lights on the building</p><p>and everything that makes you wonder.</p><p>And you were listening to that song on that drive with people you love most in this world.</p><p>And in this moment,</p><p>I swear,</p><p>We are infinite.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Charlie’s-Last-Letter&quot;&gt;&lt;a href=&quot;#Charlie’s-Last-Letter&quot; class=&quot;headerlink&quot; title=&quot;Charlie’s Last Letter&quot;&gt;&lt;/a&gt;Charlie’s Last Letter&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;from MOVIE &lt;em&gt;The Perks Of Being A Wallflower&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don’t know if I will have the time to write any more letters.&lt;/p&gt;
&lt;p&gt;Because I might be too busy trying to paticipate.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Poems" scheme="http://yoursite.com/tags/Poems/"/>
    
  </entry>
  
  <entry>
    <title>Algorithms of dynamic Sequential List</title>
    <link href="http://yoursite.com/2019/03/19/Algorithms-of-dynamic-Sequential-List/"/>
    <id>http://yoursite.com/2019/03/19/Algorithms-of-dynamic-Sequential-List/</id>
    <published>2019-03-19T02:35:26.000Z</published>
    <updated>2020-01-27T06:03:18.563Z</updated>
    
    <content type="html"><![CDATA[<h2 id="线性表顺序结构-动态"><a href="#线性表顺序结构-动态" class="headerlink" title="线性表顺序结构-动态"></a>线性表顺序结构-动态</h2><h3 id="to-declare"><a href="#to-declare" class="headerlink" title="to declare"></a>to declare</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_INIT_SIZE 10;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_INCREMENT 5;</span></span><br><span class="line"><span class="comment">//array can't apply for a new capacity</span></span><br><span class="line"><span class="comment">//once it was defined.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    DataList *data;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">    <span class="keyword">int</span> datasize <span class="comment">//to note the current capacity that has been occupied.</span></span><br><span class="line">                <span class="comment">// to judge if apply for a new capacity if it's full.   </span></span><br><span class="line">&#125; SeqList</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="1-to-initialize"><a href="#1-to-initialize" class="headerlink" title="1. to initialize"></a>1. to initialize</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initList</span><span class="params">(SeqList &amp;L)</span></span>&#123;</span><br><span class="line"><span class="comment">//initialize memory allocation</span></span><br><span class="line">    L.data = (DataList*)molloc(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(DataList));</span><br><span class="line">    <span class="keyword">if</span>(!L.data)</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    L.length = <span class="number">0</span>;</span><br><span class="line">    L.datasize = LIST_INIT_SIZE;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//succeeded   </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-to-destroy-all-of-member-variables-and-recycle"><a href="#2-to-destroy-all-of-member-variables-and-recycle" class="headerlink" title="2. to destroy all of member variables and recycle"></a>2. to destroy all of member variables and recycle</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">destroyList</span><span class="params">(SeqList &amp;L)</span></span>&#123;</span><br><span class="line">    <span class="built_in">free</span>(L.data);</span><br><span class="line">    L.length = <span class="number">0</span>;</span><br><span class="line">    L.datasize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-to-recycle"><a href="#3-to-recycle" class="headerlink" title="3. to recycle"></a>3. to recycle</h4><p>the process is <em>the same</em> as the above</p><h4 id="4-to-check-if-it’s-empty"><a href="#4-to-check-if-it’s-empty" class="headerlink" title="4. to check if it’s empty"></a>4. to check if it’s empty</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">checkEmpty</span><span class="params">(SeqList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !(L.length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-to-get-the-length-of-the-list"><a href="#5-to-get-the-length-of-the-list" class="headerlink" title="5. to get the length of the list"></a>5. to get the length of the list</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">(SeqList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> L.length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-to-return-the-value-of-the-n-th-element"><a href="#6-to-return-the-value-of-the-n-th-element" class="headerlink" title="6. to return the value of the n-th element"></a>6. to return the value of the n-th element</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataList <span class="title">getElem</span><span class="params">(SeqList L, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( n &lt; <span class="number">1</span> || n &gt; L.length )</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">//you also can only consider the feasible situation</span></span><br><span class="line">    <span class="keyword">return</span> (*(L.data+i<span class="number">-1</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-to-return-the-index-AKA-situation-of-the-given-number"><a href="#7-to-return-the-index-AKA-situation-of-the-given-number" class="headerlink" title="7. to return the index(AKA situation) of the given number"></a>7. to return the index(AKA situation) of the given number</h4><p>if it’s in the list, if succeed return 1, or return 0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLocation</span><span class="params">(SeqList L, <span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( data &amp;&amp; L.length != <span class="number">0</span> )&#123; <span class="comment">//to ensure that pointer(data) or the list is not NULL</span></span><br><span class="line">        <span class="keyword">int</span> j;<span class="comment">//default j=0;</span></span><br><span class="line">        <span class="comment">// to check if that given number is in the list</span></span><br><span class="line">        <span class="keyword">while</span> ( j &lt; L.length &amp;&amp; num != (*(data+j) )</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> ( j != L.length)</span><br><span class="line">            <span class="keyword">return</span> j;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-to-get-the-value-of-its-immediate-successor"><a href="#8-to-get-the-value-of-its-immediate-successor" class="headerlink" title="8. to get the value of its immediate successor"></a>8. to get the value of its immediate successor</h4><p>if it exits by giving values</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataList <span class="title">getI_suc</span><span class="params">(SeqList L, DataList values )</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( data &amp;&amp; L.length != <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">while</span> ( j &lt; L.length<span class="number">-1</span> &amp;&amp; values != (*(L.data+j)))</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> ( j ! = L.length<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> (*(L.data+j+<span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-to-get…the-value-of-its-predecessor"><a href="#9-to-get…the-value-of-its-predecessor" class="headerlink" title="9. to get…the value of its predecessor"></a>9. to get…the value of its predecessor</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataList <span class="title">getI_prede</span><span class="params">(SeqList L, DataList value)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( L.data &amp;&amp; L.length != <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> ( j &lt; L.length &amp;&amp; values != (*(L.data+j)))</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> ( j != L.length )</span><br><span class="line">            <span class="keyword">return</span> (*(L.data+j<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-ATTENTION"><a href="#10-ATTENTION" class="headerlink" title="10. ATTENTION"></a>10. <em>ATTENTION</em></h4><p><strong>insert a given value before an expected element of the list</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insertBef</span><span class="params">(SeqList &amp;L, DataList value, <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="comment">//need to note here, applying for a new room for the value if feasible**</span></span><br><span class="line">    <span class="keyword">if</span> ( !L.data || L.length = <span class="number">0</span> || i &lt; <span class="number">1</span> || i &gt; L.length )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;      </span><br><span class="line">        DataList  *newbase, *q, *p; <span class="comment">//p,q that two being used into operation of putting backward other elements  </span></span><br><span class="line">        <span class="comment">//need to note here - function remolloc() just change its memory size(AKA resize the memory block), doesn't change its values that inside the original memory. </span></span><br><span class="line">        <span class="comment">//check if the block of memory is full now</span></span><br><span class="line">        <span class="keyword">if</span> ( L.length == L.datasize )&#123; <span class="comment">//L.length --&gt; means the size of memory using now</span></span><br><span class="line">        newbase = (DataList*)remolloc(L.data, (L.datasize + LIST_INCREMENT)*(<span class="keyword">sizeof</span>(DataList)));</span><br><span class="line">        <span class="comment">//apply for room for value to be saved</span></span><br><span class="line">        <span class="comment">//what if failing to allocate the requested memory block, a null pointer is returned</span></span><br><span class="line">        <span class="comment">//appendix - dereference means “取指针所指向的对象的值” in Chinese. (AKA star sign(*))</span></span><br><span class="line">        <span class="keyword">if</span> ( !newbase )</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);  <span class="comment">//terminate in advance ##reallyUsefulTrick##</span></span><br><span class="line">        <span class="comment">//on success</span></span><br><span class="line">        L.datasize += LIST_INCREMENT;</span><br><span class="line">        L.data = newbase;  <span class="comment">//new address</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//expected element and those behind need to move backwards,</span></span><br><span class="line">        <span class="comment">//the process starts with the last one.</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//<span class="doctag">NOTE:</span> why need two pointers like p, q.</span></span><br><span class="line">        <span class="comment">// because all elements need being pointed by pointers.</span></span><br><span class="line">        <span class="comment">//so, we need two to deal with the process of offering a room for that value waiting to insert</span></span><br><span class="line">        <span class="comment">// and one of both to point that empty room</span></span><br><span class="line">        q = L.data+i<span class="number">-1</span>; <span class="comment">//let the pointer q point to that room(by passing on the address)</span></span><br><span class="line">        <span class="keyword">for</span> ( p = L.data+L.length<span class="number">-1</span>; p &gt; i; --p )&#123;</span><br><span class="line">            *(p+<span class="number">1</span>) = *p; <span class="comment">//moving back a room   </span></span><br><span class="line">        &#125;<span class="comment">//on success, it can't be oversized.</span></span><br><span class="line">        *q = value;</span><br><span class="line">        <span class="comment">//don't forget add up its length.</span></span><br><span class="line">        ++L.length;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-to-delete-an-expected-element-of-the-list"><a href="#11-to-delete-an-expected-element-of-the-list" class="headerlink" title="11. to delete an expected element of the list,"></a>11. to delete an expected element of the list,</h4><pre><code>if done return 1; or return 0.</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete_elem</span><span class="params">(SeqList &amp;L; <span class="keyword">int</span> s_num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!L.data || L.length == <span class="number">0</span> || s_num &lt; <span class="number">1</span>; s_num &gt; L.length)</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    DataList *p;</span><br><span class="line">    <span class="keyword">if</span> ( p = L.data+s_num; p &lt; L.data+L.length<span class="number">-1</span>; ++p)&#123;</span><br><span class="line">        *(p<span class="number">-1</span>) = *p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//on suceess</span></span><br><span class="line">    --L.length;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Reflection-A-BIG-highlight"><a href="#Reflection-A-BIG-highlight" class="headerlink" title="Reflection: A BIG-highlight"></a>Reflection: A BIG-highlight</h3><h4 id="the-difference-between-i-and-i"><a href="#the-difference-between-i-and-i" class="headerlink" title="the difference between ++i and i++;"></a>the difference between ++i and i++;</h4><blockquote><p>it’s mainly about the order of operations<br>for a ‘for’ loop, either works<br>but prefix(pre increment)seems more common<br>because you won’t go wrong using it.<br>but<br>like post increment(AKA suffix/postfix)<br>it’s more like, it returns the original value that it held before being incremented.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;线性表顺序结构-动态&quot;&gt;&lt;a href=&quot;#线性表顺序结构-动态&quot; class=&quot;headerlink&quot; title=&quot;线性表顺序结构-动态&quot;&gt;&lt;/a&gt;线性表顺序结构-动态&lt;/h2&gt;&lt;h3 id=&quot;to-declare&quot;&gt;&lt;a href=&quot;#to-declare&quot; class=&quot;headerlink&quot; title=&quot;to declare&quot;&gt;&lt;/a&gt;to declare&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LIST_INIT_SIZE 10;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LIST_INCREMENT 5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//array can&#39;t apply for a new capacity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//once it was defined.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataList *data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; datasize &lt;span class=&quot;comment&quot;&gt;//to note the current capacity that has been occupied.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// to judge if apply for a new capacity if it&#39;s full.   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; SeqList&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>EnglishReviews</title>
    <link href="http://yoursite.com/2019/03/17/English-Reviews/"/>
    <id>http://yoursite.com/2019/03/17/English-Reviews/</id>
    <published>2019-03-17T14:37:01.000Z</published>
    <updated>2020-01-27T06:03:18.563Z</updated>
    
    <content type="html"><![CDATA[<h3 id="English-catalogue"><a href="#English-catalogue" class="headerlink" title="English catalogue"></a>English catalogue</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;English-catalogue&quot;&gt;&lt;a href=&quot;#English-catalogue&quot; class=&quot;headerlink&quot; title=&quot;English catalogue&quot;&gt;&lt;/a&gt;English catalogue&lt;/h3&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>婴儿的初啼</title>
    <link href="http://yoursite.com/2019/03/17/%E5%A9%B4%E5%84%BF%E7%9A%84%E5%88%9D%E5%95%BC/"/>
    <id>http://yoursite.com/2019/03/17/%E5%A9%B4%E5%84%BF%E7%9A%84%E5%88%9D%E5%95%BC/</id>
    <published>2019-03-17T13:00:25.000Z</published>
    <updated>2020-01-27T06:03:18.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world!!"></a>Hello world!!</h1><p>I’m here writing the first post on my blog site.<br>…</p><p>好激动呀…OMG…                </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hello-world&quot;&gt;&lt;a href=&quot;#Hello-world&quot; class=&quot;headerlink&quot; title=&quot;Hello world!!&quot;&gt;&lt;/a&gt;Hello world!!&lt;/h1&gt;&lt;p&gt;I’m here writing the first pos
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
